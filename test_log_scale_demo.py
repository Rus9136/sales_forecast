#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ª–æ–≥–∞—Ä–∏—Ñ–º–∏—á–µ—Å–∫–æ–π —à–∫–∞–ª—ã —Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""
import requests
import json
from datetime import datetime, timedelta

BASE_URL = "http://localhost:8002"

def create_test_data_with_outliers():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –±–æ–ª—å—à–∏–º–∏ –≤—ã–±—Ä–æ—Å–∞–º–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ª–æ–≥. —à–∫–∞–ª—ã"""
    
    print("=" * 80)
    print("–î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –õ–û–ì–ê–†–ò–§–ú–ò–ß–ï–°–ö–û–ô –®–ö–ê–õ–´ - –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–•")
    print("=" * 80)
    
    # –ü–æ–ª—É—á–∞–µ–º –æ–¥–∏–Ω –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    dept_response = requests.get(f"{BASE_URL}/api/departments/")
    if dept_response.status_code != 200:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã")
        return None
    
    departments = dept_response.json()
    if not departments:
        print("‚ùå –ù–µ—Ç –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ")
        return None
    
    test_dept = departments[0]
    dept_id = test_dept['id']
    dept_name = test_dept['name']
    
    print(f"üìä –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è: {dept_name}")
    print(f"   ID: {dept_id}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    comp_response = requests.get(f"{BASE_URL}/api/forecast/comparison", {
        "from_date": "2025-06-01",
        "to_date": "2025-06-10",
        "department_id": dept_id
    })
    
    if comp_response.status_code == 200:
        real_data = comp_response.json()
        print(f"   –†–µ–∞–ª—å–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: {len(real_data)}")
        
        if len(real_data) > 0:
            real_predicted = [item['predicted_sales'] for item in real_data if item['predicted_sales']]
            real_actual = [item['actual_sales'] for item in real_data if item['actual_sales']]
            
            if real_predicted and real_actual:
                all_real = real_predicted + real_actual
                min_real = min(all_real)
                max_real = max(all_real)
                ratio_real = max_real / min_real if min_real > 0 else 1
                
                print(f"   –†–µ–∞–ª—å–Ω—ã–π —Ä–∞–∑–±—Ä–æ—Å: {ratio_real:.1f}x ({min_real:,.0f}‚Ç∏ - {max_real:,.0f}‚Ç∏)")
                
                # –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –≤—ã–±–æ—Ä–∞ —à–∫–∞–ª—ã
                print(f"\nüîç –ê–Ω–∞–ª–∏–∑ —à–∫–∞–ª—ã:")
                print(f"   –£—Å–ª–æ–≤–∏–µ –¥–ª—è –ª–æ–≥. —à–∫–∞–ª—ã: —Ä–∞–∑–±—Ä–æ—Å > 5x")
                print(f"   –¢–µ–∫—É—â–∏–π —Ä–∞–∑–±—Ä–æ—Å: {ratio_real:.1f}x")
                if ratio_real > 5:
                    print("   ‚úÖ –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –õ–û–ì–ê–†–ò–§–ú–ò–ß–ï–°–ö–ê–Ø —à–∫–∞–ª–∞")
                    print("   ‚úÖ –ü–æ—è–≤–∏—Ç—Å—è –∂–µ–ª—Ç–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ")
                    print("   ‚úÖ –û—Å—å Y: '–°—É–º–º–∞ –ø—Ä–æ–¥–∞–∂ (‚Ç∏) - –ª–æ–≥. —à–∫–∞–ª–∞'")
                else:
                    print("   üìà –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –õ–ò–ù–ï–ô–ù–ê–Ø —à–∫–∞–ª–∞")
                    print("   üìà –ù–ï–¢ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π")
                    print("   üìà –û—Å—å Y: '–°—É–º–º–∞ –ø—Ä–æ–¥–∞–∂ (‚Ç∏)'")
                
                return {
                    "dept_id": dept_id,
                    "dept_name": dept_name,
                    "data_count": len(real_data),
                    "min_value": min_real,
                    "max_value": max_real,
                    "ratio": ratio_real,
                    "uses_log_scale": ratio_real > 5
                }
    
    print("   ‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
    return None

def demonstrate_chart_features():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞"""
    
    print("\n" + "=" * 80)
    print("–†–ï–ê–õ–ò–ó–û–í–ê–ù–ù–´–ï –§–£–ù–ö–¶–ò–ò –ì–†–ê–§–ò–ö–ê")
    print("=" * 80)
    
    features_table = [
        ("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —à–∫–∞–ª—ã", "–†–∞–∑–±—Ä–æ—Å >5x ‚Üí –ª–æ–≥. —à–∫–∞–ª–∞", "‚úÖ"),
        ("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –≤—ã–±—Ä–æ—Å–∞—Ö", "–ñ–µ–ª—Ç–∞—è –ø–ª–∞—à–∫–∞ –ø—Ä–∏ –ª–æ–≥. —à–∫–∞–ª–µ", "‚úÖ"),
        ("–£–º–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", "‚Ç∏ 1.5–ú, ‚Ç∏ 500–ö", "‚úÖ"),
        ("–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –º–µ—Ç–æ–∫ Y", "–ú–∞–∫—Å–∏–º—É–º 8 –º–µ—Ç–æ–∫", "‚úÖ"),
        ("–ü–æ–¥–ø–∏—Å–∏ –¥–∞—Ç", "–§–æ—Ä–º–∞—Ç –î–î.–ú–ú", "‚úÖ"),
        ("–ü–æ–¥—Ä–æ–±–Ω—ã–µ tooltip'—ã", "–ü–æ–ª–Ω—ã–µ —á–∏—Å–ª–∞ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏", "‚úÖ"),
        ("–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –æ—Å–∏", "min/max —Å –æ—Ç—Å—Ç—É–ø–∞–º–∏", "‚úÖ"),
        ("–ß–∏—Ç–∞–µ–º–æ—Å—Ç—å", "–ì—Ä–∞—Ñ–∏–∫ –Ω–µ '–ø—Ä–∏–ª–∏–ø–∞–µ—Ç' –∫ –∫—Ä–∞—è–º", "‚úÖ")
    ]
    
    print(f"{'–§—É–Ω–∫—Ü–∏—è':<30} {'–û–ø–∏—Å–∞–Ω–∏–µ':<35} {'–°—Ç–∞—Ç—É—Å'}")
    print("‚îÄ" * 80)
    for func, desc, status in features_table:
        print(f"{func:<30} {desc:<35} {status}")
    
    print("\nüéØ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –®–ö–ê–õ:")
    print("‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê")
    print("‚îÇ –¢–∏–ø —à–∫–∞–ª—ã       ‚îÇ –£—Å–ª–æ–≤–∏–µ          ‚îÇ –†–µ–∑—É–ª—å—Ç–∞—Ç                   ‚îÇ")
    print("‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§")
    print("‚îÇ –õ–∏–Ω–µ–π–Ω–∞—è        ‚îÇ –†–∞–∑–±—Ä–æ—Å ‚â§ 5x     ‚îÇ –û–±—ã—á–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫              ‚îÇ")
    print("‚îÇ                 ‚îÇ                  ‚îÇ –û—Å—å: '–°—É–º–º–∞ –ø—Ä–æ–¥–∞–∂ (‚Ç∏)'    ‚îÇ")
    print("‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§")
    print("‚îÇ –õ–æ–≥–∞—Ä–∏—Ñ–º–∏—á–µ—Å–∫–∞—è ‚îÇ –†–∞–∑–±—Ä–æ—Å > 5x     ‚îÇ –°–∂–∞—Ç—ã–π –≥—Ä–∞—Ñ–∏–∫              ‚îÇ")
    print("‚îÇ                 ‚îÇ                  ‚îÇ –û—Å—å: '...‚Ç∏) - –ª–æ–≥. —à–∫–∞–ª–∞'  ‚îÇ")
    print("‚îÇ                 ‚îÇ                  ‚îÇ –ñ–µ–ª—Ç–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ       ‚îÇ")
    print("‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò")

def show_test_instructions():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    print("\n" + "=" * 80)
    print("–ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 80)
    
    print(f"\nüîó –ê–¥—Ä–µ—Å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {BASE_URL}/")
    
    print("\nüìã –®–∞–≥–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("1. –ü–†–û–ì–ù–û–ó –ü–†–û–î–ê–ñ ‚Üí üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ñ–∞–∫—Ç / –ø—Ä–æ–≥–Ω–æ–∑")
    print("2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–∏–æ–¥: 01.06.2025 - 10.06.2025")
    print("3. –í—ã–±–µ—Ä–∏—Ç–µ –ª—é–±–æ–π —Ñ–∏–ª–∏–∞–ª (–ù–ï '–í—Å–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è')")
    print("4. –ù–∞–∂–º–∏—Ç–µ '–ó–∞–≥—Ä—É–∑–∏—Ç—å'")
    
    print("\n‚úÖ –ß—Ç–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å:")
    print("‚Ä¢ –ì—Ä–∞—Ñ–∏–∫ –ø–æ—è–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–¥–Ω–æ–≥–æ —Ñ–∏–ª–∏–∞–ª–∞")
    print("‚Ä¢ –ü–æ–¥–ø–∏—Å–∏ –¥–∞—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú (–Ω–∞–ø—Ä–∏–º–µ—Ä: 01.06)")
    print("‚Ä¢ –ú–∞–∫—Å–∏–º—É–º 8 –º–µ—Ç–æ–∫ –ø–æ –æ—Å–∏ Y")
    print("‚Ä¢ –ü–æ–¥–ø–∏—Å–∏ Y –≤ —Ñ–æ—Ä–º–∞—Ç–µ ‚Ç∏ 1.5–ú –∏–ª–∏ ‚Ç∏ 500–ö")
    print("‚Ä¢ Tooltip'—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –ø–æ–ª–Ω—ã–µ —á–∏—Å–ª–∞")
    
    print("\nüîÑ –¢–µ—Å—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—ã–±–æ—Ä–∞ —à–∫–∞–ª—ã:")
    print("‚Ä¢ –ü—Ä–∏ —Ä–∞–∑–±—Ä–æ—Å–µ ‚â§5x: –æ–±—ã—á–Ω–∞—è —à–∫–∞–ª–∞, –ù–ï–¢ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π")
    print("‚Ä¢ –ü—Ä–∏ —Ä–∞–∑–±—Ä–æ—Å–µ >5x: –ª–æ–≥–∞—Ä–∏—Ñ–º–∏—á–µ—Å–∫–∞—è —à–∫–∞–ª–∞ + –∂–µ–ª—Ç–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ")
    
    print("\nüé® –í–∏–∑—É–∞–ª—å–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è:")
    print("‚Ä¢ –ì—Ä–∞—Ñ–∏–∫ –∑–∞–Ω–∏–º–∞–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ")
    print("‚Ä¢ –õ–∏–Ω–∏–∏ –Ω–µ '–ø—Ä–∏–ª–∏–ø–∞—é—Ç' –∫ –∫—Ä–∞—è–º")
    print("‚Ä¢ –¶–≤–µ—Ç–∞: —Å–∏–Ω–∏–π (–ø—Ä–æ–≥–Ω–æ–∑), –∑–µ–ª–µ–Ω—ã–π (—Ñ–∞–∫—Ç)")
    print("‚Ä¢ –†–∞–∑–º–µ—Ä —Ç–æ—á–µ–∫ –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç—Å—è –ø–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö")

if __name__ == "__main__":
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_result = create_test_data_with_outliers()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
    demonstrate_chart_features()
    
    # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    show_test_instructions()
    
    print("\n" + "=" * 80)
    print("–õ–û–ì–ê–†–ò–§–ú–ò–ß–ï–°–ö–ê–Ø –®–ö–ê–õ–ê –£–°–ü–ï–®–ù–û –†–ï–ê–õ–ò–ó–û–í–ê–ù–ê! üéØ")
    print("=" * 80)