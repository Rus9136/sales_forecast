#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ª–æ–≥–∞—Ä–∏—Ñ–º–∏—á–µ—Å–∫–æ–π —à–∫–∞–ª—ã –≥—Ä–∞—Ñ–∏–∫–∞ "–§–∞–∫—Ç vs –ü—Ä–æ–≥–Ω–æ–∑"
"""
import requests
import json

BASE_URL = "http://localhost:8002"

def test_log_scale_chart():
    print("=" * 80)
    print("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –õ–û–ì–ê–†–ò–§–ú–ò–ß–ï–°–ö–û–ô –®–ö–ê–õ–´ –ì–†–ê–§–ò–ö–ê '–§–ê–ö–¢ vs –ü–†–û–ì–ù–û–ó'")
    print("=" * 80)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º HTML –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ HTML –ª–æ–≥–∞—Ä–∏—Ñ–º–∏—á–µ—Å–∫–∏—Ö –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π...")
    response = requests.get(f"{BASE_URL}/")
    html_content = response.text
    
    log_scale_features = {
        "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –≤—ã–±—Ä–æ—Å–∞—Ö": "chart-outliers-warning" in html_content,
        "–õ–æ–≥–∞—Ä–∏—Ñ–º–∏—á–µ—Å–∫–∞—è —à–∫–∞–ª–∞": "logarithmic" in html_content,
        "–ê–Ω–∞–ª–∏–∑ –≤—ã–±—Ä–æ—Å–æ–≤": "valueRatio" in html_content,
        "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä —à–∫–∞–ª—ã": "useLogScale" in html_content,
        "–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ç–æ–∫": "toFixed(1)" in html_content and "'–ú'" in html_content,
        "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –æ—Å–µ–π": "maxTicksLimit: 8" in html_content
    }
    
    for name, found in log_scale_features.items():
        status = "‚úÖ" if found else "‚ùå"
        print(f"   {status} {name}")
    
    # 2. –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —à–∫–∞–ª
    print("\n2. –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —à–∫–∞–ª...")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤
    dept_response = requests.get(f"{BASE_URL}/api/departments/")
    if dept_response.status_code != 200:
        print("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤")
        return
    
    departments = dept_response.json()
    print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(departments)} –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç —Ä–∞–∑–±—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö
    test_scenarios = []
    
    for i, dept in enumerate(departments[:5]):  # –ü–µ—Ä–≤—ã–µ 5 –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤
        dept_id = dept['id']
        dept_name = dept['name']
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∑–∞ –º–µ—Å—è—Ü
        comp_response = requests.get(f"{BASE_URL}/api/forecast/comparison", {
            "from_date": "2025-06-01",
            "to_date": "2025-06-30",
            "department_id": dept_id
        })
        
        if comp_response.status_code == 200:
            data = comp_response.json()
            if len(data) > 0:
                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–∞–∑–±—Ä–æ—Å –∑–Ω–∞—á–µ–Ω–∏–π
                predicted_values = [item['predicted_sales'] for item in data if item['predicted_sales']]
                actual_values = [item['actual_sales'] for item in data if item['actual_sales']]
                all_values = predicted_values + actual_values
                
                if len(all_values) > 0:
                    min_val = min(all_values)
                    max_val = max(all_values)
                    ratio = max_val / min_val if min_val > 0 else 0
                    
                    scenario = {
                        "dept_name": dept_name[:25],
                        "dept_id": dept_id,
                        "data_points": len(data),
                        "min_value": min_val,
                        "max_value": max_val,
                        "ratio": ratio,
                        "needs_log_scale": ratio > 5
                    }
                    test_scenarios.append(scenario)
    
    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞
    print(f"\n   üìä –ê–Ω–∞–ª–∏–∑ —Ä–∞–∑–±—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö:")
    print(f"   {'–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç':<25} {'–¢–æ—á–µ–∫':<6} {'–ú–∏–Ω. ‚Ç∏':<12} {'–ú–∞–∫—Å. ‚Ç∏':<12} {'–†–∞–∑–±—Ä–æ—Å':<8} {'–õ–æ–≥.—à–∫–∞–ª–∞'}")
    print("   " + "‚îÄ" * 80)
    
    for scenario in test_scenarios:
        log_needed = "–î–ê" if scenario['needs_log_scale'] else "–ù–ï–¢"
        print(f"   {scenario['dept_name']:<25} "
              f"{scenario['data_points']:<6} "
              f"{scenario['min_value']:>11,.0f} "
              f"{scenario['max_value']:>11,.0f} "
              f"{scenario['ratio']:>7.1f}x "
              f"{log_needed}")
    
    # 3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å —Ä–∞–∑–Ω—ã–º–∏ –º–∞—Å—à—Ç–∞–±–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö
    print("\n3. –ü–æ–∏—Å–∫ –¥–∞–Ω–Ω—ã—Ö —Å –±–æ–ª—å—à–∏–º–∏ —Ä–∞–∑—Ä—ã–≤–∞–º–∏...")
    
    high_ratio_scenarios = [s for s in test_scenarios if s['ratio'] > 5]
    low_ratio_scenarios = [s for s in test_scenarios if s['ratio'] <= 5 and s['ratio'] > 1]
    
    if high_ratio_scenarios:
        best_high = max(high_ratio_scenarios, key=lambda x: x['ratio'])
        print(f"   üî• –õ—É—á—à–∏–π –∫–∞–Ω–¥–∏–¥–∞—Ç –¥–ª—è –ª–æ–≥. —à–∫–∞–ª—ã: {best_high['dept_name']}")
        print(f"      –†–∞–∑–±—Ä–æ—Å: {best_high['ratio']:.1f}x ({best_high['min_value']:,.0f}‚Ç∏ - {best_high['max_value']:,.0f}‚Ç∏)")
        print(f"      ID: {best_high['dept_id']}")
    else:
        print("   ‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —Å —Ä–∞–∑–±—Ä–æ—Å–æ–º >5x –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ª–æ–≥. —à–∫–∞–ª—ã")
    
    if low_ratio_scenarios:
        best_low = min(low_ratio_scenarios, key=lambda x: x['ratio'])
        print(f"   üìà –ö–∞–Ω–¥–∏–¥–∞—Ç –¥–ª—è –ª–∏–Ω–µ–π–Ω–æ–π —à–∫–∞–ª—ã: {best_low['dept_name']}")
        print(f"      –†–∞–∑–±—Ä–æ—Å: {best_low['ratio']:.1f}x ({best_low['min_value']:,.0f}‚Ç∏ - {best_low['max_value']:,.0f}‚Ç∏)")
        print(f"      ID: {best_low['dept_id']}")
    
    # 4. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    print("\n" + "=" * 80)
    print("–ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø –†–£–ß–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –õ–û–ì–ê–†–ò–§–ú–ò–ß–ï–°–ö–û–ô –®–ö–ê–õ–´")
    print("=" * 80)
    
    print(f"\nüîó –û—Ç–∫—Ä–æ–π—Ç–µ: {BASE_URL}/")
    print("\nüìã –¢–µ—Å—Ç –ª–æ–≥–∞—Ä–∏—Ñ–º–∏—á–µ—Å–∫–æ–π —à–∫–∞–ª—ã:")
    print("1. –ù–∞–≤–∏–≥–∞—Ü–∏—è: –ü–†–û–ì–ù–û–ó –ü–†–û–î–ê–ñ ‚Üí üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ñ–∞–∫—Ç / –ø—Ä–æ–≥–Ω–æ–∑")
    print("2. –ü–µ—Ä–∏–æ–¥: 01.06.2025 - 30.06.2025")
    
    if high_ratio_scenarios:
        print(f"3. –§–∏–ª–∏–∞–ª —Å –±–æ–ª—å—à–∏–º —Ä–∞–∑–±—Ä–æ—Å–æ–º: {best_high['dept_name']}")
        print("4. –ù–∞–∂–º–∏—Ç–µ '–ó–∞–≥—Ä—É–∑–∏—Ç—å'")
        print("\n‚úÖ –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –±–æ–ª—å—à–æ–≥–æ —Ä–∞–∑–±—Ä–æ—Å–∞:")
        print("‚Ä¢ –ü–æ—è–≤–∏—Ç—Å—è –ñ–ï–õ–¢–û–ï –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: 'üìà –í–Ω–∏–º–∞–Ω–∏–µ: –ì—Ä–∞—Ñ–∏–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ª–æ–≥–∞—Ä–∏—Ñ–º–∏—á–µ—Å–∫—É—é —à–∫–∞–ª—É...'")
        print("‚Ä¢ –û—Å—å Y –ø–æ–¥–ø–∏—Å–∞–Ω–∞ –∫–∞–∫: '–°—É–º–º–∞ –ø—Ä–æ–¥–∞–∂ (‚Ç∏) - –ª–æ–≥. —à–∫–∞–ª–∞'")
        print("‚Ä¢ –ü–æ–¥–ø–∏—Å–∏ –æ—Å–∏ Y –≤ —Ñ–æ—Ä–º–∞—Ç–µ: ‚Ç∏ 1.5–ú, ‚Ç∏ 500–ö –∏ —Ç.–¥.")
        print("‚Ä¢ –ì—Ä–∞—Ñ–∏–∫ –≤—ã–≥–ª—è–¥–∏—Ç –±–æ–ª–µ–µ '—Å–∂–∞—Ç—ã–º' –∏ —á–∏—Ç–∞–µ–º—ã–º")
        print("‚Ä¢ –õ–∏–Ω–∏–∏ –Ω–µ '–ø—Ä–∏–ª–∏–ø–∞—é—Ç' –∫ –∫—Ä–∞—è–º –≥—Ä–∞—Ñ–∏–∫–∞")
    
    if low_ratio_scenarios:
        print(f"\n5. –ó–∞—Ç–µ–º –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ñ–∏–ª–∏–∞–ª: {best_low['dept_name']}")
        print("\n‚úÖ –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –Ω–µ–±–æ–ª—å—à–æ–≥–æ —Ä–∞–∑–±—Ä–æ—Å–∞:")
        print("‚Ä¢ –ù–ï–¢ –∂–µ–ª—Ç–æ–≥–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è")
        print("‚Ä¢ –û—Å—å Y –ø–æ–¥–ø–∏—Å–∞–Ω–∞ –∫–∞–∫: '–°—É–º–º–∞ –ø—Ä–æ–¥–∞–∂ (‚Ç∏)' (–±–µ–∑ '–ª–æ–≥. —à–∫–∞–ª–∞')")
        print("‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ–±—ã—á–Ω–∞—è –ª–∏–Ω–µ–π–Ω–∞—è —à–∫–∞–ª–∞")
    
    print("\nüß™ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã:")
    print("‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ tooltip'—ã - –¥–æ–ª–∂–Ω—ã –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–ª–Ω—ã–µ —á–∏—Å–ª–∞")
    print("‚Ä¢ –ü–æ–¥–ø–∏—Å–∏ –¥–∞—Ç –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú")
    print("‚Ä¢ –ú–∞–∫—Å–∏–º—É–º 8 –º–µ—Ç–æ–∫ –ø–æ –æ—Å–∏ Y –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏")
    print("‚Ä¢ –ì—Ä–∞—Ñ–∏–∫ –¥–æ–ª–∂–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–∏—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â—É—é —à–∫–∞–ª—É")
    
    print("\nüéØ –ö—Ä–∏—Ç–µ—Ä–∏–∏ —É—Å–ø–µ—Ö–∞:")
    print("‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –ª–∏–Ω–µ–π–Ω–æ–π –∏ –ª–æ–≥–∞—Ä–∏—Ñ–º–∏—á–µ—Å–∫–æ–π —à–∫–∞–ª–æ–π")
    print("‚Ä¢ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ—è–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Ä–∞–∑–±—Ä–æ—Å–µ >5x")
    print("‚Ä¢ –ì—Ä–∞—Ñ–∏–∫ –æ—Å—Ç–∞–µ—Ç—Å—è —á–∏—Ç–∞–µ–º—ã–º –ø—Ä–∏ –ª—é–±—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
    print("‚Ä¢ –ü–æ–¥–ø–∏—Å–∏ –æ—Å–µ–π –ø–æ–Ω—è—Ç–Ω—ã–µ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ")

if __name__ == "__main__":
    test_log_scale_chart()